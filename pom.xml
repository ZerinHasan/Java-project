import java.util.ArrayList;
        import java.util.Scanner;

        // Class to represent a Student
        class Student {
        int id;
        String name;

        public Student(int id, String name) {
        this.id = id;
        this.name = name;
        }

        @Override
        public String toString() {
        return "Student ID: " + id + ", Name: " + name;
        }
        }

        // Class to represent a Teacher
        class Teacher {
        int id;
        String name;

        public Teacher(int id, String name) {
        this.id = id;
        this.name = name;
        }

        @Override
        public String toString() {
        return "Teacher ID: " + id + ", Name: " + name;
        }
        }

        // Class to represent a Course
        class Course {
        int id;
        String name;

        public Course(int id, String name) {
        this.id = id;
        this.name = name;
        }

        @Override
        public String toString() {
        return "Course ID: " + id + ", Name: " + name;
        }
        }

        // Main class for College Management System
        public class CollegeManagementSystem {
        static ArrayList<Student> students = new ArrayList<>();
    static ArrayList<Teacher> teachers = new ArrayList<>();
        static ArrayList<Course> courses = new ArrayList<>();
            static Scanner scanner = new Scanner(System.in);

            public static void main(String[] args) {
            while (true) {
            System.out.println("\n----- College Management System -----");
            System.out.println("1. Add Student");
            System.out.println("2. Add Teacher");
            System.out.println("3. Add Course");
            System.out.println("4. Display All");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Clear the buffer
            switch (choice) {
            case 1 -> addStudent();
            case 2 -> addTeacher();
            case 3 -> addCourse();
            case 4 -> displayAll();
            case 5 -> {
            System.out.println("Exiting... Thank you!");
            System.exit(0);
            }
            default -> System.out.println("Invalid choice. Please try again.");
            }
            }
            }

            static void addStudent() {
            System.out.print("Enter Student ID: ");
            int id = scanner.nextInt();
            scanner.nextLine(); // Clear the buffer
            System.out.print("Enter Student Name: ");
            String name = scanner.nextLine();
            students.add(new Student(id, name));
            System.out.println("Student added successfully!");
            }

            static void addTeacher() {
            System.out.print("Enter Teacher ID: ");
            int id = scanner.nextInt();
            scanner.nextLine(); // Clear the buffer
            System.out.print("Enter Teacher Name: ");
            String name = scanner.nextLine();
            teachers.add(new Teacher(id, name));
            System.out.println("Teacher added successfully!");
            }

            static void addCourse() {
            System.out.print("Enter Course ID: ");
            int id = scanner.nextInt();
            scanner.nextLine(); // Clear the buffer
            System.out.print("Enter Course Name: ");
            String name = scanner.nextLine();
            courses.add(new Course(id, name));
            System.out.println("Course added successfully!");
            }

            static void displayAll() {
            System.out.println("\n--- Students ---");
            if (students.isEmpty()) {
            System.out.println("No students added yet.");
            } else {
            students.forEach(System.out::println);
            }

            System.out.println("\n--- Teachers ---");
            if (teachers.isEmpty()) {
            System.out.println("No teachers added yet.");
            } else {
            teachers.forEach(System.out::println);
            }

            System.out.println("\n--- Courses ---");
            if (courses.isEmpty()) {
            System.out.println("No courses added yet.");
            } else {
            courses.forEach(System.out::println);
            }
            }
            }
